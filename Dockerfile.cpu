# TensorFlow image has GPU support and Jupyter
FROM tensorflow/tensorflow:1.12.0-py3

# ==== OUR STUFF FOLLOWS ====
ENV last-update "2019-02-18 11:54"

RUN apt-get install -y curl

# Node
RUN curl -sL https://deb.nodesource.com/setup_8.x |bash
RUN apt-get update && apt-get install -y git nodejs

# Data science stuff
RUN apt-get install -y libsm6 libxrender-dev libxext6
RUN pip install opencv-python scikit-image

# JupyterLab (on top of a jupyter-only base)
RUN pip install jupyterlab
# dotmesh sdk
RUN pip install git+git://github.com/dotmesh-io/python-sdk@bb1ace821d13b496e01efe4d748aa76e648d841b#egg=datadots-api

## NB: sleep 120 on failure cases is so that, in combination with gitlab retries, we
## give the package backend a chance to converge

# Our Jupyter plugin
ARG plugin_version
RUN if [ "x$plugin_version" = "x" ] ; then pip install --upgrade jupyterlab-dotscience-backend ; else pip install --upgrade jupyterlab-dotscience-backend==$plugin_version || sleep 120; fi
RUN jupyter serverextension enable --py jupyterlab_dotscience_backend --sys-prefix

ADD ./scripts /scripts

## install the dotscience workload library

ARG dotscience_python_tag
RUN if [ "x$dotscience_python_tag" = "x" ] ; then pip install --upgrade dotscience ; else pip install --upgrade dotscience==$dotscience_python_tag || sleep 120 ; fi

## install and activate the browser extension
RUN if [ "x$plugin_version" = "x" ] ; then npm install @dotscience/jupyterlab-plugin ; else npm install @dotscience/jupyterlab-plugin@$plugin_version || sleep 120 ; fi
RUN cd node_modules/@dotscience/jupyterlab-plugin && jupyter labextension install .

# Enable a more liberal Content-Security-Policy so that we can display Jupyter
# in an iframe.
RUN bash /scripts/update-content-security-policy.sh

# Clean up files which otherwise get copied into the workspace dot, at the
# expense of a few hundred meg.
RUN cd /root && rm -rf .cache .conda .config .npm work .yarn

## override the entrypoint to allow root
CMD /bin/bash /scripts/start-jupyter.sh
